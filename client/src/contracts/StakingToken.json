{
  "contractName": "StakingToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "createStakeFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "withdrawStakeFailed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        }
      ],
      "name": "createStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"createStakeFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"withdrawStakeFailed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"}],\"name\":\"createStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Chakshu Jain, India\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"createStake(uint256)\":{\"params\":{\"_stake\":\"The amount of the stake to be created.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"Staking Token (STK)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"The constructor for the Staking Token.\"},\"createStake(uint256)\":{\"notice\":\"A method for the stakeholder to create a stake.\"},\"withdrawStake()\":{\"notice\":\"A method to allow a stakeholder to withdraw his stake with interest if any.\"}},\"notice\":\"Implements a basic ERC20 staking token with reward distribution.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/StakingToken.sol\":\"StakingToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"project:/contracts/StakingToken.sol\":{\"keccak256\":\"0x39beaa43dfbd5c4959cd0db324d204935fc9bcd4238f1bbff45500d51ffbbb75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ae58826322b6c9cd8113624d4e86c4f171a8d5b946fbf7bd8096d396a3a2d5\",\"dweb:/ipfs/Qmf76WxjE9NQj8PAdpvM2rrCeUq94pnuMd1qZxU7C1DBUf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a29ba30b5b2afaa37b5b2b760a91b8152506040518060400160405280600381526020016253544b60e81b81525081600390805190602001906200006a92919062000193565b5080516200008090600490602084019062000193565b505050620000a633670de0b6b3a7640000612710620000a0919062000294565b620000ac565b62000309565b6001600160a01b038216620000de5760405162461bcd60e51b8152600401620000d59062000239565b60405180910390fd5b620000ec600083836200018e565b806002600082825462000100919062000279565b90915550506001600160a01b038216600090815260208190526040812080548392906200012f90849062000279565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200017490859062000270565b60405180910390a36200018a600083836200018e565b5050565b505050565b828054620001a190620002b6565b90600052602060002090601f016020900481019282620001c5576000855562000210565b82601f10620001e057805160ff191683800117855562000210565b8280016001018555821562000210579182015b8281111562000210578251825591602001919060010190620001f3565b506200021e92915062000222565b5090565b5b808211156200021e576000815560010162000223565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200028f576200028f620002f3565b500190565b6000816000190483118215151615620002b157620002b1620002f3565b500290565b600281046001821680620002cb57607f821691505b60208210811415620002ed57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610fc580620003196000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d714610192578063a9059cbb146101a5578063bed9d861146101b8578063dd62ed3e146101c0576100cf565b8063395093511461016457806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd146101125780631bf6ddae1461012757806323b872dd1461013c578063313ce5671461014f575b600080fd5b6100dc6101d3565b6040516100e99190610ae4565b60405180910390f35b610105610100366004610a98565b610265565b6040516100e99190610ad9565b61011a610282565b6040516100e99190610eb9565b61013a610135366004610ac1565b610288565b005b61010561014a366004610a5d565b610357565b6101576103f0565b6040516100e99190610ec2565b610105610172366004610a98565b6103f5565b61011a610185366004610a0a565b610449565b6100dc610468565b6101056101a0366004610a98565b610477565b6101056101b3366004610a98565b6104f0565b61013a610504565b61011a6101ce366004610a2b565b610628565b6060600380546101e290610f3e565b80601f016020809104026020016040519081016040528092919081815260200182805461020e90610f3e565b801561025b5780601f106102305761010080835404028352916020019161025b565b820191906000526020600020905b81548152906001019060200180831161023e57829003601f168201915b5050505050905090565b6000610279610272610653565b8484610657565b50600192915050565b60025490565b61029a565b60405180910390a1610354565b33600090815260056020526040902054156102dc577fe5d2a8237636831689185de6bae136180bcc9ac8f814368496bb73063a1b7cc860405161028d90610c44565b806102e633610449565b1015610319577fe5d2a8237636831689185de6bae136180bcc9ac8f814368496bb73063a1b7cc860405161028d90610c93565b6103343361032f670de0b6b3a764000084610f08565b61070b565b336000908152600560209081526040808320849055600690915290204290555b50565b60006103648484846107fd565b6001600160a01b038416600090815260016020526040812081610385610653565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103d15760405162461bcd60e51b81526004016103c890610d2b565b60405180910390fd5b6103e5856103dd610653565b858403610657565b506001949350505050565b601290565b6000610279610402610653565b848460016000610410610653565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546104449190610ed0565b610657565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101e290610f3e565b60008060016000610486610653565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d25760405162461bcd60e51b81526004016103c890610e3d565b6104e66104dd610653565b85858403610657565b5060019392505050565b60006102796104fd610653565b84846107fd565b33600090815260056020526040902054610552577f445c03d45a38998d8582f4dfaaccbaa6c4bd87c317d987da89e6f9eddd4f5de560405161054590610ce6565b60405180910390a1610626565b3360009081526006602052604081205462015180906105719042610f27565b61057b9190610ee8565b9050600061058a600783610ee8565b33600090815260056020819052604082205492935090916064916105ae9190610f08565b6105b89190610ee8565b905060006105c68284610f08565b33600090815260056020526040812054919250906105e5908390610ed0565b33600081815260056020908152604080832083905560069091528120559091506106209061061b670de0b6b3a764000084610f08565b610927565b50505050505b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661067d5760405162461bcd60e51b81526004016103c890610df9565b6001600160a01b0382166106a35760405162461bcd60e51b81526004016103c890610bbc565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106fe908590610eb9565b60405180910390a3505050565b6001600160a01b0382166107315760405162461bcd60e51b81526004016103c890610d73565b61073d826000836107f8565b6001600160a01b038216600090815260208190526040902054818110156107765760405162461bcd60e51b81526004016103c890610b7a565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107a5908490610f27565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107e8908690610eb9565b60405180910390a36107f8836000845b505050565b6001600160a01b0383166108235760405162461bcd60e51b81526004016103c890610db4565b6001600160a01b0382166108495760405162461bcd60e51b81526004016103c890610b37565b6108548383836107f8565b6001600160a01b0383166000908152602081905260409020548181101561088d5760405162461bcd60e51b81526004016103c890610bfe565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108c4908490610ed0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161090e9190610eb9565b60405180910390a36109218484846107f8565b50505050565b6001600160a01b03821661094d5760405162461bcd60e51b81526004016103c890610e82565b610959600083836107f8565b806002600082825461096b9190610ed0565b90915550506001600160a01b03821660009081526020819052604081208054839290610998908490610ed0565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109db908590610eb9565b60405180910390a36109ef600083836107f8565b5050565b80356001600160a01b038116811461046357600080fd5b600060208284031215610a1b578081fd5b610a24826109f3565b9392505050565b60008060408385031215610a3d578081fd5b610a46836109f3565b9150610a54602084016109f3565b90509250929050565b600080600060608486031215610a71578081fd5b610a7a846109f3565b9250610a88602085016109f3565b9150604084013590509250925092565b60008060408385031215610aaa578182fd5b610ab3836109f3565b946020939093013593505050565b600060208284031215610ad2578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b81811015610b1057858101830151858201604001528201610af4565b81811115610b215783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252602f908201527f546f207374616b6520616761696e2c20706c656173652077697468647261772060408201526e796f7572206f6c64207374616b652160881b606082015260800190565b60208082526033908201527f596f7520646f6e2774206861766520656e6f7567682062616c616e636520746f604082015272207374616b65207468697320616d6f756e742160681b606082015260800190565b60208082526025908201527f596f7520646f6e2774206861766520616e79207374616b6520746f2077697468604082015264647261772160d81b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610ee357610ee3610f79565b500190565b600082610f0357634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610f2257610f22610f79565b500290565b600082821015610f3957610f39610f79565b500390565b600281046001821680610f5257607f821691505b60208210811415610f7357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f667d7ade9bef8bf8c240f4a7e1dd566a381fc18f7d629b7d78b6c0f7dba4ffe64736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1376:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:181:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:6",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:33:6",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:61:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:61:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "337:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "349:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "360:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "345:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "337:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:6",
                "type": ""
              }
            ],
            "src": "14:355:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:76:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "485:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "497:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "485:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "527:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "538:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "520:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "520:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "444:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "455:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "466:4:6",
                "type": ""
              }
            ],
            "src": "374:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:80:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "631:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "633:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "633:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "633:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "620:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "627:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "623:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "623:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "617:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "614:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "662:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "673:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "676:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "669:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "669:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "662:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "587:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "590:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "596:3:6",
                "type": ""
              }
            ],
            "src": "556:128:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:116:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "800:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "802:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "802:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "802:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "772:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "765:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "765:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "758:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "758:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "780:1:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "791:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "787:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "787:6:6"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "795:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "783:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "783:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "777:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "754:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:45:6"
                  },
                  "nodeType": "YulIf",
                  "src": "751:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "831:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "846:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "849:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "842:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "831:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "720:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "723:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "729:7:6",
                "type": ""
              }
            ],
            "src": "689:168:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:325:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "927:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "941:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "947:1:6",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "937:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "937:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "927:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "958:38:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "988:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "994:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "984:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "984:12:6"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "962:18:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1035:31:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1037:27:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1051:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1059:4:6",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1047:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1047:17:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1037:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1015:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1008:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1008:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1005:2:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1125:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1146:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1153:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1158:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1149:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1149:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1139:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1139:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1139:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1190:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1193:4:6",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1183:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1183:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1183:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1218:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1221:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1211:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1211:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1211:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1081:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1104:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1112:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1101:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1101:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1078:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1075:2:6"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "897:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "906:6:6",
                "type": ""
              }
            ],
            "src": "862:380:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1279:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1296:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1303:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1308:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1299:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1299:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1289:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1289:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1336:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1339:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1329:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1329:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1329:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1360:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1363:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1353:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1353:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1353:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1247:127:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9429:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:6",
                "type": ""
              }
            ],
            "src": "14:175:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:6",
                "type": ""
              }
            ],
            "src": "194:198:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:6"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:6",
                "type": ""
              }
            ],
            "src": "397:274:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:6"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:6"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:6",
                "type": ""
              }
            ],
            "src": "676:342:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:179:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1156:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1165:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1173:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1158:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1158:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1158:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1131:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1140:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1152:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1120:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:41:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1201:20:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:31:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1241:42:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1268:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1279:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:32:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1079:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1091:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1099:6:6",
                "type": ""
              }
            ],
            "src": "1023:266:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1364:120:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1410:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1419:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1427:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1412:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1412:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1412:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1385:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1394:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1406:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1377:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1377:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1374:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1445:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1468:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1455:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1445:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1330:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1341:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1353:6:6",
                "type": ""
              }
            ],
            "src": "1294:190:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1584:92:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1594:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1606:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1617:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1602:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1602:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1594:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1636:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1661:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1654:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1654:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1647:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1647:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1629:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1629:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1629:41:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1553:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1564:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1575:4:6",
                "type": ""
              }
            ],
            "src": "1489:187:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1802:482:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1812:12:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1822:2:6",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1816:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1840:9:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1851:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1833:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1833:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1833:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1863:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1883:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1877:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1877:13:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1867:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1910:9:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1921:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1906:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1906:18:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1926:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1899:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1899:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1899:34:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1942:13:6",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "1951:4:6"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1946:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2014:90:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2043:9:6"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2054:1:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2039:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2039:17:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2058:2:6",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2035:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2035:26:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2077:6:6"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2085:1:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2073:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2073:14:6"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2089:2:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2069:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2069:23:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2063:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2063:30:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2028:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2028:66:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2028:66:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1975:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1978:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1972:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1972:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1986:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1988:15:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1997:1:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2000:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1993:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1993:10:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1988:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1968:3:6",
                    "statements": []
                  },
                  "src": "1964:140:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2138:69:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2167:9:6"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2178:6:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2163:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2163:22:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2187:2:6",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2159:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2159:31:6"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2192:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2152:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2152:45:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2152:45:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2119:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2122:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2116:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2116:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2113:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2216:62:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2232:9:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2251:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2259:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2247:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2247:15:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2268:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2264:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2264:7:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2243:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2243:29:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2228:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2228:45:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2275:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2224:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2224:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2216:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1771:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1782:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1793:4:6",
                "type": ""
              }
            ],
            "src": "1681:603:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2463:225:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2480:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2491:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2473:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2473:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2473:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2514:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2525:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2510:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2530:2:6",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2503:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2503:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2503:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2553:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2564:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2549:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2549:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2569:34:6",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2542:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2542:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2624:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2635:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2620:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2620:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2640:5:6",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2613:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2613:33:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2655:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2667:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2678:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2663:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2663:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2655:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2440:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2454:4:6",
                "type": ""
              }
            ],
            "src": "2289:399:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2867:224:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2884:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2895:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2877:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2877:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2877:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2918:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2929:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2914:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2914:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2934:2:6",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2907:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2907:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2907:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2957:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2968:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2953:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2953:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2973:34:6",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2946:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2946:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2946:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3028:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3039:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3024:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3024:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3044:4:6",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3017:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3017:32:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3017:32:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3058:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3070:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3081:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3066:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3066:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3058:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2844:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2858:4:6",
                "type": ""
              }
            ],
            "src": "2693:398:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3270:224:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3287:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3298:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3280:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3280:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3280:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3321:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3332:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3317:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3317:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3337:2:6",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3310:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3310:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3360:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3371:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3356:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3356:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3376:34:6",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3349:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3349:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3431:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3442:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3427:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3427:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3447:4:6",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3420:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3420:32:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3420:32:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3461:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3473:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3484:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3469:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3461:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3247:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3261:4:6",
                "type": ""
              }
            ],
            "src": "3096:398:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3673:228:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3690:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3701:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3683:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3683:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3683:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3724:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3735:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3720:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3720:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3740:2:6",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3713:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3713:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3713:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3763:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3774:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3759:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3759:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3779:34:6",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3752:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3752:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3752:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3834:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3845:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3830:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3830:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3850:8:6",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3823:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3823:36:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3823:36:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3868:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3880:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3891:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3876:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3876:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3868:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3650:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3664:4:6",
                "type": ""
              }
            ],
            "src": "3499:402:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4080:237:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4097:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4108:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4090:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4090:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4090:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4131:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4142:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4127:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4127:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4147:2:6",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4120:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4120:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4120:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4170:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4181:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4166:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4166:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4186:34:6",
                        "type": "",
                        "value": "To stake again, please withdraw "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4159:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4159:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4159:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4241:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4252:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4237:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4237:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4257:17:6",
                        "type": "",
                        "value": "your old stake!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4230:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:45:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4230:45:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4284:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4296:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4307:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4292:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4292:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4284:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_556f11f1b03947dd4b94da9f2db20acf45ece55a783b236586e45f730da63b5b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4057:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4071:4:6",
                "type": ""
              }
            ],
            "src": "3906:411:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4496:241:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4513:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4524:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4506:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4506:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4506:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4547:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4558:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4543:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4543:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4563:2:6",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4536:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4536:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4536:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4586:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4597:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4582:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4582:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4602:34:6",
                        "type": "",
                        "value": "You don't have enough balance to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4575:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4575:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4575:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4657:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4668:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4653:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4653:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4673:21:6",
                        "type": "",
                        "value": " stake this amount!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4646:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4646:49:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4646:49:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4704:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4716:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4727:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4712:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4712:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4704:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5a8ce860ea43f0a1518d1bda407b43c02425fae7fcbe5429a73991348804de67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4473:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4487:4:6",
                "type": ""
              }
            ],
            "src": "4322:415:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4916:227:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4933:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4944:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4926:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4926:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4926:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4967:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4978:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4963:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4963:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4983:2:6",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4956:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4956:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4956:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5006:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5017:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5002:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5002:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5022:34:6",
                        "type": "",
                        "value": "You don't have any stake to with"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4995:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4995:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4995:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5077:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5088:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5073:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5073:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5093:7:6",
                        "type": "",
                        "value": "draw!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5066:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5066:35:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5066:35:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5110:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5122:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5133:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5118:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5118:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5110:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6621264d3f1cba6f86600d1ad6742704e44897086dac48630df9fb171a9a419c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4893:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4907:4:6",
                "type": ""
              }
            ],
            "src": "4742:401:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5322:230:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5339:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5350:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5332:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5332:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5332:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5373:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5384:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5369:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5369:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5389:2:6",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5362:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5362:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5362:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5412:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5423:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5408:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5408:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5428:34:6",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5401:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5401:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5401:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5483:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5494:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5479:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5479:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5499:10:6",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5472:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5472:38:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5472:38:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5519:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5531:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5542:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5527:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5527:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5519:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5299:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5313:4:6",
                "type": ""
              }
            ],
            "src": "5148:404:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5731:223:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5748:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5759:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5741:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5741:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5741:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5782:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5793:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5778:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5778:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5798:2:6",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5771:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5771:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5771:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5821:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5832:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5817:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5817:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5837:34:6",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5810:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5810:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5810:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5892:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5903:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5888:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5888:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5908:3:6",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5881:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5881:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5881:31:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5921:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5933:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5944:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5929:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5929:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5921:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5708:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5722:4:6",
                "type": ""
              }
            ],
            "src": "5557:397:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6133:227:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6150:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6161:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6143:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6143:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6143:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6184:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6195:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6180:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6180:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6200:2:6",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6173:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6173:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6173:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6223:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6234:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6219:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6219:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6239:34:6",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6212:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6212:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6212:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6294:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6305:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6290:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6290:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6310:7:6",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6283:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:35:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6283:35:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6327:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6339:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6350:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6335:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6335:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6327:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6110:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6124:4:6",
                "type": ""
              }
            ],
            "src": "5959:401:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6539:226:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6556:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6567:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6549:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6590:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6601:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6586:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6586:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6606:2:6",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6579:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6579:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6579:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6629:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6640:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6625:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6625:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6645:34:6",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6618:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6618:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6618:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6700:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6711:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6696:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6696:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6716:6:6",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6689:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6689:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6689:34:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6732:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6744:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6755:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6740:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6740:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6732:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6516:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6530:4:6",
                "type": ""
              }
            ],
            "src": "6365:400:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6944:171:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6961:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6972:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6954:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6954:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6954:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6995:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7006:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6991:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6991:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7011:2:6",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6984:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6984:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6984:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7034:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7045:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7030:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7030:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7050:23:6",
                        "type": "",
                        "value": "Invalid stake amount!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7023:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7023:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7023:51:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7083:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7095:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7106:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7091:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7091:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7083:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d1115c29fbea0f57b0a51c31d2f2fe33c79b7e7ef72d87d7cc57efc654343a4d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6921:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6935:4:6",
                "type": ""
              }
            ],
            "src": "6770:345:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7294:227:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7311:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7322:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7304:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7304:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7304:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7345:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7356:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7341:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7341:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7361:2:6",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7334:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7334:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7334:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7384:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7395:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7380:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7380:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7400:34:6",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7373:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7373:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7373:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7455:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7466:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7451:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7451:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7471:7:6",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7444:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7444:35:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7444:35:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7488:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7500:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7511:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7496:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7496:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7488:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7271:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7285:4:6",
                "type": ""
              }
            ],
            "src": "7120:401:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7700:181:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7717:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7728:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7710:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7710:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7710:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7751:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7762:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7747:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7747:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7767:2:6",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7740:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7740:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7740:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7790:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7801:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7786:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7786:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7806:33:6",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7779:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7779:61:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7779:61:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7849:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7861:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7872:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7857:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7857:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7849:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7677:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7691:4:6",
                "type": ""
              }
            ],
            "src": "7526:355:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7987:76:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7997:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8009:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8020:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8005:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8005:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7997:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8039:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8050:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8032:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8032:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8032:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7956:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7967:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7978:4:6",
                "type": ""
              }
            ],
            "src": "7886:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8165:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8175:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8187:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8198:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8183:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8183:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8175:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8217:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8232:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8240:4:6",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8228:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8228:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8210:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8210:36:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8210:36:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8134:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8145:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8156:4:6",
                "type": ""
              }
            ],
            "src": "8068:184:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8305:80:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8332:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8334:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8334:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8334:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8321:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8328:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8324:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8324:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8318:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8318:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "8315:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8363:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8374:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8377:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8370:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8370:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8363:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8288:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8291:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8297:3:6",
                "type": ""
              }
            ],
            "src": "8257:128:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8436:171:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8467:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "8488:1:6"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8495:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8500:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8491:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8491:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8481:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8481:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8481:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8532:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8535:4:6",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8525:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8525:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8525:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "8560:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8563:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8553:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8553:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8553:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8456:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8449:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8449:9:6"
                  },
                  "nodeType": "YulIf",
                  "src": "8446:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8587:14:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8596:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8599:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8592:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8592:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8587:1:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8421:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8424:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8430:1:6",
                "type": ""
              }
            ],
            "src": "8390:217:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8664:116:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8723:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8725:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8725:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8725:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8695:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8688:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8688:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8681:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8681:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8703:1:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8714:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8710:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8710:6:6"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8718:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8706:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8706:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8700:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8700:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8677:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8677:45:6"
                  },
                  "nodeType": "YulIf",
                  "src": "8674:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8754:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8769:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8772:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8765:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8765:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8754:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8643:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8646:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8652:7:6",
                "type": ""
              }
            ],
            "src": "8612:168:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8834:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8856:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8858:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8858:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8858:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8850:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8853:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8847:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8847:8:6"
                  },
                  "nodeType": "YulIf",
                  "src": "8844:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8887:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8899:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8902:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8895:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8895:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8887:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8816:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8819:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8825:4:6",
                "type": ""
              }
            ],
            "src": "8785:125:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8970:325:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8980:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8994:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9000:1:6",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8990:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8990:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8980:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9011:38:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9041:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9047:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9037:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9037:12:6"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "9015:18:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9088:31:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9090:27:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9104:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9112:4:6",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9100:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9100:17:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9090:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9068:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9061:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9061:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9058:2:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9178:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9199:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9206:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9211:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "9202:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9202:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9192:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9192:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9192:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9243:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9246:4:6",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9236:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9236:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9236:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9271:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9274:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9264:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9264:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9264:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9134:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9157:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9165:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9154:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9154:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9131:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9131:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9128:2:6"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8950:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8959:6:6",
                "type": ""
              }
            ],
            "src": "8915:380:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9332:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9349:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9356:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9361:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9352:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9352:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9342:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9342:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9342:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9389:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9392:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9382:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9382:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9382:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9413:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9416:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9406:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9406:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9406:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9300:127:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_556f11f1b03947dd4b94da9f2db20acf45ece55a783b236586e45f730da63b5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"To stake again, please withdraw \")\n        mstore(add(headStart, 96), \"your old stake!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5a8ce860ea43f0a1518d1bda407b43c02425fae7fcbe5429a73991348804de67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"You don't have enough balance to\")\n        mstore(add(headStart, 96), \" stake this amount!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6621264d3f1cba6f86600d1ad6742704e44897086dac48630df9fb171a9a419c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"You don't have any stake to with\")\n        mstore(add(headStart, 96), \"draw!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d1115c29fbea0f57b0a51c31d2f2fe33c79b7e7ef72d87d7cc57efc654343a4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid stake amount!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "259:1976:5:-:0;;;765:87;;;;;;;;;;1896:113:0;;;;;;;;;;;;;-1:-1:-1;;;1896:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:0;;;1970:5;1962;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1985:17:0;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;813:34:5::1;819:10;508:6;831:5;:15;;;;:::i;:::-;813:5;:34::i;:::-;259:1976:::0;;8244:389:0;-1:-1:-1;;;;;8327:21:0;;8319:65;;;;-1:-1:-1;;;8319:65:0;;;;;;;:::i;:::-;;;;;;;;;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:0;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:0;;-1:-1:-1;;;;;8530:37:0;;;8547:1;;8530:37;;;;8560:6;;8530:37;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;:48::i;:::-;8244:389;;:::o;10906:121::-;;;;:::o;259:1976:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;259:1976:5;;;-1:-1:-1;259:1976:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:355:6;216:2;198:21;;;255:2;235:18;;;228:30;294:33;289:2;274:18;;267:61;360:2;345:18;;188:181::o;374:177::-;520:25;;;508:2;493:18;;475:76::o;556:128::-;;627:1;623:6;620:1;617:13;614:2;;;633:18;;:::i;:::-;-1:-1:-1;669:9:6;;604:80::o;689:168::-;;795:1;791;787:6;783:14;780:1;777:21;772:1;765:9;758:17;754:45;751:2;;;802:18;;:::i;:::-;-1:-1:-1;842:9:6;;741:116::o;862:380::-;947:1;937:12;;994:1;984:12;;;1005:2;;1059:4;1051:6;1047:17;1037:27;;1005:2;1112;1104:6;1101:14;1081:18;1078:38;1075:2;;;1158:10;1153:3;1149:20;1146:1;1139:31;1193:4;1190:1;1183:15;1221:4;1218:1;1211:15;1075:2;;917:325;;;:::o;1247:127::-;1308:10;1303:3;1299:20;1296:1;1289:31;1339:4;1336:1;1329:15;1363:4;1360:1;1353:15;1279:95;259:1976:5;;;;;;",
  "deployedSourceMap": "259:1976:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3162:106::-;;;:::i;:::-;;;;;;;:::i;987:528:5:-;;;;;;:::i;:::-;;:::i;:::-;;4804:478:0;;;;;;:::i;:::-;;:::i;3011:91::-;;;:::i;:::-;;;;;;;:::i;5677:212::-;;;;;;:::i;:::-;;:::i;3326:125::-;;;;;;:::i;:::-;;:::i;2285:102::-;;;:::i;6376:405::-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;1620:613:5:-;;;:::i;3884:149:0:-;;;;;;:::i;:::-;;:::i;2074:98::-;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;4279:12;:10;:12::i;:::-;4293:7;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:0;4171:166;;;;:::o;3162:106::-;3249:12;;3162:106;:::o;987:528:5:-;1037:473;;1066:42;;;;;;;;1037:473;;;1132:10;1125:18;;;;:6;:18;;;;;;:23;1121:389;;1163:68;;;;;;:::i;1121:389::-;1272:6;1248:21;1258:10;1248:9;:21::i;:::-;:30;1244:266;;;1293:72;;;;;;:::i;1244:266::-;1386:35;1392:10;1404:16;508:6;1404;:16;:::i;:::-;1386:5;:35::i;:::-;1436:10;1429:18;;;;:6;:18;;;;;;;;:27;;;1464:9;:21;;;;;1488:15;1464:39;;1244:266;987:528;:::o;4804:478:0:-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:0;;5003:24;5030:19;;;:11;:19;;;;;5003:24;5050:12;:10;:12::i;:::-;-1:-1:-1;;;;;5030:33:0;-1:-1:-1;;;;;5030:33:0;;;;;;;;;;;;;5003:60;;5101:6;5081:16;:26;;5073:79;;;;-1:-1:-1;;;5073:79:0;;;;;;;:::i;:::-;;;;;;;;;5186:57;5195:6;5203:12;:10;:12::i;:::-;5236:6;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:0;;4804:478;-1:-1:-1;;;;4804:478:0:o;3011:91::-;3093:2;3011:91;:::o;5677:212::-;5765:4;5781:80;5790:12;:10;:12::i;:::-;5804:7;5850:10;5813:11;:25;5825:12;:10;:12::i;:::-;-1:-1:-1;;;;;5813:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;5813:25:0;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5781:8;:80::i;3326:125::-;-1:-1:-1;;;;;3426:18:0;;3400:7;3426:18;;;;;;;;;;;3326:125;;;;:::o;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;6376:405::-;6469:4;6485:24;6512:11;:25;6524:12;:10;:12::i;:::-;-1:-1:-1;;;;;6512:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;6512:25:0;;;:34;;;;;;;;;;;-1:-1:-1;6564:35:0;;;;6556:85;;;;-1:-1:-1;;;6556:85:0;;;;;;;:::i;:::-;6675:67;6684:12;:10;:12::i;:::-;6698:7;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:0;;6376:405;-1:-1:-1;;;6376:405:0:o;3654:172::-;3740:4;3756:42;3766:12;:10;:12::i;:::-;3780:9;3791:6;3756:9;:42::i;1620:613:5:-;1669:10;1662:18;;;;:6;:18;;;;;;1658:571;;1700:60;;;;;;:::i;:::-;;;;;;;;1658:571;;;1830:10;1781:17;1820:21;;;:9;:21;;;;;;1846:12;;1802:39;;:15;:39;:::i;:::-;1801:58;;;;:::i;:::-;1781:78;-1:-1:-1;1867:18:5;1888:13;1900:1;1781:78;1888:13;:::i;:::-;1946:10;1909:26;1939:18;;;:6;:18;;;;;;;;1867:34;;-1:-1:-1;1909:26:5;;1965:3;;1939:22;;:18;:22;:::i;:::-;1938:30;;;;:::i;:::-;1909:59;-1:-1:-1;1976:22:5;2001:31;1909:59;2001:10;:31;:::i;:::-;2076:10;2040:26;2069:18;;;:6;:18;;;;;;1976:56;;-1:-1:-1;2040:26:5;2069:35;;1976:56;;2069:35;:::i;:::-;2119:10;2133:1;2112:18;;;:6;:18;;;;;;;;:22;;;2142:9;:21;;;;;:25;2040:64;;-1:-1:-1;2175:47:5;;2193:28;508:6;2040:64;2193:28;:::i;:::-;2175:5;:47::i;:::-;1658:571;;;;;;1620:613::o;3884:149:0:-;-1:-1:-1;;;;;3999:18:0;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149::o;586:96:3:-;665:10;586:96;:::o;9952:370:0:-;-1:-1:-1;;;;;10083:19:0;;10075:68;;;;-1:-1:-1;;;10075:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;10161:21:0;;10153:68;;;;-1:-1:-1;;;10153:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;10232:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10283:32;;;;;10262:6;;10283:32;:::i;:::-;;;;;;;;9952:370;;;:::o;8953:576::-;-1:-1:-1;;;;;9036:21:0;;9028:67;;;;-1:-1:-1;;;9028:67:0;;;;;;;:::i;:::-;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;-1:-1:-1;;;;;9191:18:0;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9324:18:0;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9362:6;;9324:9;9388:22;;9362:6;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:0;;9452:1;;-1:-1:-1;;;;;9426:37:0;;;;;;;9456:6;;9426:37;:::i;:::-;;;;;;;;9474:48;9494:7;9511:1;9515:6;9474:48;8953:576;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:0;;7382:70;;;;-1:-1:-1;;;7382:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7470:23:0;;7462:71;;;;-1:-1:-1;;;7462:71:0;;;;;;;:::i;:::-;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;-1:-1:-1;;;;;7626:17:0;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7761:17:0;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:0;7878:6;-1:-1:-1;;;;;7869:35:0;;7897:6;7869:35;;;;;;:::i;:::-;;;;;;;;7915:46;7935:6;7943:9;7954:6;7915:19;:46::i;:::-;7255:713;;;;:::o;8244:389::-;-1:-1:-1;;;;;8327:21:0;;8319:65;;;;-1:-1:-1;;;8319:65:0;;;;;;;:::i;:::-;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:0;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:0;;-1:-1:-1;;;;;8530:37:0;;;8547:1;;8530:37;;;;8560:6;;8530:37;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;:48::i;:::-;8244:389;;:::o;14:175:6:-;84:20;;-1:-1:-1;;;;;133:31:6;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:6:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:6:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:6;;1364:120;-1:-1:-1;1364:120:6:o;1489:187::-;1654:14;;1647:22;1629:41;;1617:2;1602:18;;1584:92::o;1681:603::-;;1822:2;1851;1840:9;1833:21;1883:6;1877:13;1926:6;1921:2;1910:9;1906:18;1899:34;1951:4;1964:140;1978:6;1975:1;1972:13;1964:140;;;2073:14;;;2069:23;;2063:30;2039:17;;;2058:2;2035:26;2028:66;1993:10;;1964:140;;;2122:6;2119:1;2116:13;2113:2;;;2192:4;2187:2;2178:6;2167:9;2163:22;2159:31;2152:45;2113:2;-1:-1:-1;2268:2:6;2247:15;-1:-1:-1;;2243:29:6;2228:45;;;;2275:2;2224:54;;1802:482;-1:-1:-1;;;1802:482:6:o;2289:399::-;2491:2;2473:21;;;2530:2;2510:18;;;2503:30;2569:34;2564:2;2549:18;;2542:62;-1:-1:-1;;;2635:2:6;2620:18;;2613:33;2678:3;2663:19;;2463:225::o;2693:398::-;2895:2;2877:21;;;2934:2;2914:18;;;2907:30;2973:34;2968:2;2953:18;;2946:62;-1:-1:-1;;;3039:2:6;3024:18;;3017:32;3081:3;3066:19;;2867:224::o;3096:398::-;3298:2;3280:21;;;3337:2;3317:18;;;3310:30;3376:34;3371:2;3356:18;;3349:62;-1:-1:-1;;;3442:2:6;3427:18;;3420:32;3484:3;3469:19;;3270:224::o;3499:402::-;3701:2;3683:21;;;3740:2;3720:18;;;3713:30;3779:34;3774:2;3759:18;;3752:62;-1:-1:-1;;;3845:2:6;3830:18;;3823:36;3891:3;3876:19;;3673:228::o;3906:411::-;4108:2;4090:21;;;4147:2;4127:18;;;4120:30;4186:34;4181:2;4166:18;;4159:62;-1:-1:-1;;;4252:2:6;4237:18;;4230:45;4307:3;4292:19;;4080:237::o;4322:415::-;4524:2;4506:21;;;4563:2;4543:18;;;4536:30;4602:34;4597:2;4582:18;;4575:62;-1:-1:-1;;;4668:2:6;4653:18;;4646:49;4727:3;4712:19;;4496:241::o;4742:401::-;4944:2;4926:21;;;4983:2;4963:18;;;4956:30;5022:34;5017:2;5002:18;;4995:62;-1:-1:-1;;;5088:2:6;5073:18;;5066:35;5133:3;5118:19;;4916:227::o;5148:404::-;5350:2;5332:21;;;5389:2;5369:18;;;5362:30;5428:34;5423:2;5408:18;;5401:62;-1:-1:-1;;;5494:2:6;5479:18;;5472:38;5542:3;5527:19;;5322:230::o;5557:397::-;5759:2;5741:21;;;5798:2;5778:18;;;5771:30;5837:34;5832:2;5817:18;;5810:62;-1:-1:-1;;;5903:2:6;5888:18;;5881:31;5944:3;5929:19;;5731:223::o;5959:401::-;6161:2;6143:21;;;6200:2;6180:18;;;6173:30;6239:34;6234:2;6219:18;;6212:62;-1:-1:-1;;;6305:2:6;6290:18;;6283:35;6350:3;6335:19;;6133:227::o;6365:400::-;6567:2;6549:21;;;6606:2;6586:18;;;6579:30;6645:34;6640:2;6625:18;;6618:62;-1:-1:-1;;;6711:2:6;6696:18;;6689:34;6755:3;6740:19;;6539:226::o;7120:401::-;7322:2;7304:21;;;7361:2;7341:18;;;7334:30;7400:34;7395:2;7380:18;;7373:62;-1:-1:-1;;;7466:2:6;7451:18;;7444:35;7511:3;7496:19;;7294:227::o;7526:355::-;7728:2;7710:21;;;7767:2;7747:18;;;7740:30;7806:33;7801:2;7786:18;;7779:61;7872:2;7857:18;;7700:181::o;7886:177::-;8032:25;;;8020:2;8005:18;;7987:76::o;8068:184::-;8240:4;8228:17;;;;8210:36;;8198:2;8183:18;;8165:87::o;8257:128::-;;8328:1;8324:6;8321:1;8318:13;8315:2;;;8334:18;;:::i;:::-;-1:-1:-1;8370:9:6;;8305:80::o;8390:217::-;;8456:1;8446:2;;-1:-1:-1;;;8481:31:6;;8535:4;8532:1;8525:15;8563:4;8488:1;8553:15;8446:2;-1:-1:-1;8592:9:6;;8436:171::o;8612:168::-;;8718:1;8714;8710:6;8706:14;8703:1;8700:21;8695:1;8688:9;8681:17;8677:45;8674:2;;;8725:18;;:::i;:::-;-1:-1:-1;8765:9:6;;8664:116::o;8785:125::-;;8853:1;8850;8847:8;8844:2;;;8858:18;;:::i;:::-;-1:-1:-1;8895:9:6;;8834:76::o;8915:380::-;9000:1;8990:12;;9047:1;9037:12;;;9058:2;;9112:4;9104:6;9100:17;9090:27;;9058:2;9165;9157:6;9154:14;9134:18;9131:38;9128:2;;;9211:10;9206:3;9202:20;9199:1;9192:31;9246:4;9243:1;9236:15;9274:4;9271:1;9264:15;9128:2;;8970:325;;;:::o;9300:127::-;9361:10;9356:3;9352:20;9349:1;9342:31;9392:4;9389:1;9382:15;9416:4;9413:1;9406:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title Staking Token (STK)\n * @author Chakshu Jain, India\n * @notice Implements a basic ERC20 staking token with reward distribution.\n */\ncontract StakingToken is ERC20 {\n\n  // The stakes for each stakeholder.\n  mapping(address => uint256) internal stakes;\n  \n  // The starting date of stake.\n  mapping(address => uint256) internal startDate;\n\n  // Decimal \n  uint256 constant decimal = 10**18;\n  \n  // Event to log createStake failure reason\n  event createStakeFailed(string reason);\n\n  // Event to log withdrawStake failure reason\n  event withdrawStakeFailed(string reason);\n\n  /**\n   * @notice The constructor for the Staking Token.\n   */\n  constructor() ERC20(\"Stake_Token\", \"STK\") {\n    _mint(msg.sender, 10000 * decimal);\n  }\n\n  /**\n   * @notice A method for the stakeholder to create a stake.\n   * @param _stake The amount of the stake to be created.\n   */\n  function createStake(uint256 _stake) public {\n    if (_stake < 0) {\n      emit createStakeFailed(\"Invalid stake amount!\");\n    } else if (stakes[msg.sender] != 0) {\n      emit createStakeFailed(\"To stake again, please withdraw your old stake!\");\n    } else if (balanceOf(msg.sender) < _stake) {\n      emit createStakeFailed(\"You don't have enough balance to stake this amount!\");\n    } else {\n      _burn(msg.sender, _stake * decimal);\n      stakes[msg.sender] = _stake;\n      startDate[msg.sender] = block.timestamp;\n    }\n\n  }\n\n  /**\n   * @notice A method to allow a stakeholder to withdraw his stake with interest if any.\n   */\n  function withdrawStake() public {\n    if (stakes[msg.sender] == 0) {\n      emit withdrawStakeFailed(\"You don't have any stake to withdraw!\");\n    } else {\n      uint256 totalDays = (block.timestamp - startDate[msg.sender]) / (60 * 60 * 24);\n      uint256 noOfCycles = totalDays / 7;\n      uint256 interestOfOneCycle = (stakes[msg.sender] * 5) / 100;\n      uint256 interestAmount = noOfCycles * interestOfOneCycle;\n      uint256 withdrawableAmount = stakes[msg.sender] + interestAmount;\n      stakes[msg.sender] = 0;\n      startDate[msg.sender] = 0;\n      _mint(msg.sender, withdrawableAmount * decimal);\n    }\n  }\n}\n",
  "sourcePath": "/home/chakshu/Dev/solidity_staking/contracts/StakingToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/StakingToken.sol",
    "exportedSymbols": {
      "Context": [
        669
      ],
      "ERC20": [
        545
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "StakingToken": [
        906
      ]
    },
    "id": 907,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 708,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 709,
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 546,
        "src": "57:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 711,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 545,
              "src": "284:5:5"
            },
            "id": 712,
            "nodeType": "InheritanceSpecifier",
            "src": "284:5:5"
          }
        ],
        "contractDependencies": [
          545,
          623,
          648,
          669
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 710,
          "nodeType": "StructuredDocumentation",
          "src": "114:144:5",
          "text": " @title Staking Token (STK)\n @author Chakshu Jain, India\n @notice Implements a basic ERC20 staking token with reward distribution."
        },
        "fullyImplemented": true,
        "id": 906,
        "linearizedBaseContracts": [
          906,
          545,
          648,
          623,
          669
        ],
        "name": "StakingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 716,
            "mutability": "mutable",
            "name": "stakes",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "333:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 715,
              "keyType": {
                "id": 713,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "341:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "333:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 714,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "352:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 720,
            "mutability": "mutable",
            "name": "startDate",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "416:46:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 719,
              "keyType": {
                "id": 717,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "424:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "416:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 718,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "435:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 725,
            "mutability": "constant",
            "name": "decimal",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "481:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 721,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 724,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 722,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "508:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3138",
                "id": 723,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "512:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "508:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 729,
            "name": "createStakeFailed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "590:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "589:15:5"
            },
            "src": "566:39:5"
          },
          {
            "anonymous": false,
            "id": 733,
            "name": "withdrawStakeFailed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "682:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:15:5"
            },
            "src": "656:41:5"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "807:45:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "819:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "819:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130303030",
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "831:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 745,
                          "name": "decimal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "839:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "831:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 741,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "813:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "813:34:5"
                }
              ]
            },
            "documentation": {
              "id": 734,
              "nodeType": "StructuredDocumentation",
              "src": "701:61:5",
              "text": " @notice The constructor for the Staking Token."
            },
            "id": 750,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5374616b655f546f6b656e",
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "785:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a28993acaaecabfb5c69ce2c42f4c708fdfdd43aef7976cca0cdfb7c559f0c58",
                      "typeString": "literal_string \"Stake_Token\""
                    },
                    "value": "Stake_Token"
                  },
                  {
                    "hexValue": "53544b",
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "800:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
                      "typeString": "literal_string \"STK\""
                    },
                    "value": "STK"
                  }
                ],
                "id": 739,
                "modifierName": {
                  "id": 736,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "779:5:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "779:27:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:2:5"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:0:5"
            },
            "scope": 906,
            "src": "765:87:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "1031:484:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 756,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "1041:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1050:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1041:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 764,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "1125:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 767,
                        "indexExpression": {
                          "expression": {
                            "id": 765,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1132:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1132:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1125:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1147:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1125:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 776,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1258:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1258:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 775,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1248:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1248:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 779,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "1272:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1248:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 809,
                        "nodeType": "Block",
                        "src": "1378:132:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 787,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1392:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 788,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1392:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 789,
                                    "name": "_stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 753,
                                    "src": "1404:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 790,
                                    "name": "decimal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 725,
                                    "src": "1413:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1404:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 786,
                                "name": "_burn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 477,
                                "src": "1386:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1386:35:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 793,
                            "nodeType": "ExpressionStatement",
                            "src": "1386:35:5"
                          },
                          {
                            "expression": {
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 794,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 716,
                                  "src": "1429:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 797,
                                "indexExpression": {
                                  "expression": {
                                    "id": 795,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1436:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1436:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "1429:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 798,
                                "name": "_stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 753,
                                "src": "1450:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1429:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 800,
                            "nodeType": "ExpressionStatement",
                            "src": "1429:27:5"
                          },
                          {
                            "expression": {
                              "id": 807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 801,
                                  "name": "startDate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 720,
                                  "src": "1464:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 804,
                                "indexExpression": {
                                  "expression": {
                                    "id": 802,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1474:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1474:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "1464:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 805,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "1488:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1488:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1464:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 808,
                            "nodeType": "ExpressionStatement",
                            "src": "1464:39:5"
                          }
                        ]
                      },
                      "id": 810,
                      "nodeType": "IfStatement",
                      "src": "1244:266:5",
                      "trueBody": {
                        "id": 785,
                        "nodeType": "Block",
                        "src": "1280:92:5",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "hexValue": "596f7520646f6e2774206861766520656e6f7567682062616c616e636520746f207374616b65207468697320616d6f756e7421",
                                  "id": 782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1311:53:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5a8ce860ea43f0a1518d1bda407b43c02425fae7fcbe5429a73991348804de67",
                                    "typeString": "literal_string \"You don't have enough balance to stake this amount!\""
                                  },
                                  "value": "You don't have enough balance to stake this amount!"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5a8ce860ea43f0a1518d1bda407b43c02425fae7fcbe5429a73991348804de67",
                                    "typeString": "literal_string \"You don't have enough balance to stake this amount!\""
                                  }
                                ],
                                "id": 781,
                                "name": "createStakeFailed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 729,
                                "src": "1293:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1293:72:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 784,
                            "nodeType": "EmitStatement",
                            "src": "1288:77:5"
                          }
                        ]
                      }
                    },
                    "id": 811,
                    "nodeType": "IfStatement",
                    "src": "1121:389:5",
                    "trueBody": {
                      "id": 774,
                      "nodeType": "Block",
                      "src": "1150:88:5",
                      "statements": [
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "hexValue": "546f207374616b6520616761696e2c20706c6561736520776974686472617720796f7572206f6c64207374616b6521",
                                "id": 771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1181:49:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_556f11f1b03947dd4b94da9f2db20acf45ece55a783b236586e45f730da63b5b",
                                  "typeString": "literal_string \"To stake again, please withdraw your old stake!\""
                                },
                                "value": "To stake again, please withdraw your old stake!"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_556f11f1b03947dd4b94da9f2db20acf45ece55a783b236586e45f730da63b5b",
                                  "typeString": "literal_string \"To stake again, please withdraw your old stake!\""
                                }
                              ],
                              "id": 770,
                              "name": "createStakeFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "1163:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1163:68:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 773,
                          "nodeType": "EmitStatement",
                          "src": "1158:73:5"
                        }
                      ]
                    }
                  },
                  "id": 812,
                  "nodeType": "IfStatement",
                  "src": "1037:473:5",
                  "trueBody": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "1053:62:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "496e76616c6964207374616b6520616d6f756e7421",
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1084:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d1115c29fbea0f57b0a51c31d2f2fe33c79b7e7ef72d87d7cc57efc654343a4d",
                                "typeString": "literal_string \"Invalid stake amount!\""
                              },
                              "value": "Invalid stake amount!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d1115c29fbea0f57b0a51c31d2f2fe33c79b7e7ef72d87d7cc57efc654343a4d",
                                "typeString": "literal_string \"Invalid stake amount!\""
                              }
                            ],
                            "id": 759,
                            "name": "createStakeFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "1066:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1066:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 762,
                        "nodeType": "EmitStatement",
                        "src": "1061:47:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "856:128:5",
              "text": " @notice A method for the stakeholder to create a stake.\n @param _stake The amount of the stake to be created."
            },
            "functionSelector": "1bf6ddae",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "1008:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1007:16:5"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:5"
            },
            "scope": 906,
            "src": "987:528:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "1652:581:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 818,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "1662:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 821,
                      "indexExpression": {
                        "expression": {
                          "id": 819,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1669:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1669:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1662:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1684:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1662:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "1773:456:5",
                    "statements": [
                      {
                        "assignments": [
                          830
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 830,
                            "mutability": "mutable",
                            "name": "totalDays",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "1781:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 829,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1781:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 846,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 831,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "1802:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1802:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 833,
                                    "name": "startDate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 720,
                                    "src": "1820:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 836,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 834,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1830:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 835,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1830:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1820:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1802:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 838,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1801:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "id": 843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "id": 841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3630",
                                    "id": 839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1846:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3630",
                                    "id": 840,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1851:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "src": "1846:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3234",
                                  "id": 842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1856:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "src": "1846:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              }
                            ],
                            "id": 844,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1845:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            }
                          },
                          "src": "1801:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1781:78:5"
                      },
                      {
                        "assignments": [
                          848
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 848,
                            "mutability": "mutable",
                            "name": "noOfCycles",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "1867:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 847,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1867:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 852,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 849,
                            "name": "totalDays",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "1888:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "37",
                            "id": 850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1900:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "src": "1888:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1867:34:5"
                      },
                      {
                        "assignments": [
                          854
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 854,
                            "mutability": "mutable",
                            "name": "interestOfOneCycle",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "1909:26:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 853,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1909:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 864,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 855,
                                    "name": "stakes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 716,
                                    "src": "1939:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 858,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 856,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1946:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1946:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1939:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "35",
                                  "id": 859,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1960:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "src": "1939:22:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 861,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1938:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1965:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1938:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1909:59:5"
                      },
                      {
                        "assignments": [
                          866
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 866,
                            "mutability": "mutable",
                            "name": "interestAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "1976:22:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 865,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1976:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 870,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 867,
                            "name": "noOfCycles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 848,
                            "src": "2001:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 868,
                            "name": "interestOfOneCycle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "2014:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2001:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1976:56:5"
                      },
                      {
                        "assignments": [
                          872
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 872,
                            "mutability": "mutable",
                            "name": "withdrawableAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "2040:26:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 871,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2040:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 879,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 873,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "2069:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 876,
                            "indexExpression": {
                              "expression": {
                                "id": 874,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2076:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2076:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2069:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 877,
                            "name": "interestAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "2090:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2069:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2040:64:5"
                      },
                      {
                        "expression": {
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 880,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "2112:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 883,
                            "indexExpression": {
                              "expression": {
                                "id": 881,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2119:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2119:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2112:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2133:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2112:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 886,
                        "nodeType": "ExpressionStatement",
                        "src": "2112:22:5"
                      },
                      {
                        "expression": {
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 887,
                              "name": "startDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "2142:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 890,
                            "indexExpression": {
                              "expression": {
                                "id": 888,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2152:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2152:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2142:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2166:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2142:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 893,
                        "nodeType": "ExpressionStatement",
                        "src": "2142:25:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 895,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2181:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2181:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 897,
                                "name": "withdrawableAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 872,
                                "src": "2193:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 898,
                                "name": "decimal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "2214:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2193:28:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 894,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "2175:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2175:47:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "2175:47:5"
                      }
                    ]
                  },
                  "id": 903,
                  "nodeType": "IfStatement",
                  "src": "1658:571:5",
                  "trueBody": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "1687:80:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "596f7520646f6e2774206861766520616e79207374616b6520746f20776974686472617721",
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1720:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6621264d3f1cba6f86600d1ad6742704e44897086dac48630df9fb171a9a419c",
                                "typeString": "literal_string \"You don't have any stake to withdraw!\""
                              },
                              "value": "You don't have any stake to withdraw!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6621264d3f1cba6f86600d1ad6742704e44897086dac48630df9fb171a9a419c",
                                "typeString": "literal_string \"You don't have any stake to withdraw!\""
                              }
                            ],
                            "id": 824,
                            "name": "withdrawStakeFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "1700:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1700:60:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 827,
                        "nodeType": "EmitStatement",
                        "src": "1695:65:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 815,
              "nodeType": "StructuredDocumentation",
              "src": "1519:98:5",
              "text": " @notice A method to allow a stakeholder to withdraw his stake with interest if any."
            },
            "functionSelector": "bed9d861",
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1642:2:5"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:0:5"
            },
            "scope": 906,
            "src": "1620:613:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 907,
        "src": "259:1976:5"
      }
    ],
    "src": "32:2204:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/StakingToken.sol",
    "exportedSymbols": {
      "Context": [
        669
      ],
      "ERC20": [
        545
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "StakingToken": [
        906
      ]
    },
    "id": 907,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 708,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 709,
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 546,
        "src": "57:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 711,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 545,
              "src": "284:5:5"
            },
            "id": 712,
            "nodeType": "InheritanceSpecifier",
            "src": "284:5:5"
          }
        ],
        "contractDependencies": [
          545,
          623,
          648,
          669
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 710,
          "nodeType": "StructuredDocumentation",
          "src": "114:144:5",
          "text": " @title Staking Token (STK)\n @author Chakshu Jain, India\n @notice Implements a basic ERC20 staking token with reward distribution."
        },
        "fullyImplemented": true,
        "id": 906,
        "linearizedBaseContracts": [
          906,
          545,
          648,
          623,
          669
        ],
        "name": "StakingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 716,
            "mutability": "mutable",
            "name": "stakes",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "333:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 715,
              "keyType": {
                "id": 713,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "341:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "333:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 714,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "352:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 720,
            "mutability": "mutable",
            "name": "startDate",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "416:46:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 719,
              "keyType": {
                "id": 717,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "424:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "416:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 718,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "435:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 725,
            "mutability": "constant",
            "name": "decimal",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "481:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 721,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 724,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 722,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "508:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3138",
                "id": 723,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "512:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "508:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 729,
            "name": "createStakeFailed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "590:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "589:15:5"
            },
            "src": "566:39:5"
          },
          {
            "anonymous": false,
            "id": 733,
            "name": "withdrawStakeFailed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "682:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:15:5"
            },
            "src": "656:41:5"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "807:45:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "819:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "819:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130303030",
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "831:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 745,
                          "name": "decimal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "839:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "831:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 741,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "813:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "813:34:5"
                }
              ]
            },
            "documentation": {
              "id": 734,
              "nodeType": "StructuredDocumentation",
              "src": "701:61:5",
              "text": " @notice The constructor for the Staking Token."
            },
            "id": 750,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5374616b655f546f6b656e",
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "785:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a28993acaaecabfb5c69ce2c42f4c708fdfdd43aef7976cca0cdfb7c559f0c58",
                      "typeString": "literal_string \"Stake_Token\""
                    },
                    "value": "Stake_Token"
                  },
                  {
                    "hexValue": "53544b",
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "800:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
                      "typeString": "literal_string \"STK\""
                    },
                    "value": "STK"
                  }
                ],
                "id": 739,
                "modifierName": {
                  "id": 736,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "779:5:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "779:27:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:2:5"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:0:5"
            },
            "scope": 906,
            "src": "765:87:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "1031:484:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 756,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "1041:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1050:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1041:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 764,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "1125:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 767,
                        "indexExpression": {
                          "expression": {
                            "id": 765,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1132:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1132:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1125:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1147:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1125:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 776,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1258:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1258:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 775,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1248:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1248:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 779,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "1272:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1248:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 809,
                        "nodeType": "Block",
                        "src": "1378:132:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 787,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1392:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 788,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1392:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 789,
                                    "name": "_stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 753,
                                    "src": "1404:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 790,
                                    "name": "decimal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 725,
                                    "src": "1413:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1404:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 786,
                                "name": "_burn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 477,
                                "src": "1386:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1386:35:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 793,
                            "nodeType": "ExpressionStatement",
                            "src": "1386:35:5"
                          },
                          {
                            "expression": {
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 794,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 716,
                                  "src": "1429:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 797,
                                "indexExpression": {
                                  "expression": {
                                    "id": 795,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1436:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1436:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "1429:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 798,
                                "name": "_stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 753,
                                "src": "1450:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1429:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 800,
                            "nodeType": "ExpressionStatement",
                            "src": "1429:27:5"
                          },
                          {
                            "expression": {
                              "id": 807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 801,
                                  "name": "startDate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 720,
                                  "src": "1464:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 804,
                                "indexExpression": {
                                  "expression": {
                                    "id": 802,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1474:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1474:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "1464:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 805,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "1488:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1488:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1464:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 808,
                            "nodeType": "ExpressionStatement",
                            "src": "1464:39:5"
                          }
                        ]
                      },
                      "id": 810,
                      "nodeType": "IfStatement",
                      "src": "1244:266:5",
                      "trueBody": {
                        "id": 785,
                        "nodeType": "Block",
                        "src": "1280:92:5",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "hexValue": "596f7520646f6e2774206861766520656e6f7567682062616c616e636520746f207374616b65207468697320616d6f756e7421",
                                  "id": 782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1311:53:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5a8ce860ea43f0a1518d1bda407b43c02425fae7fcbe5429a73991348804de67",
                                    "typeString": "literal_string \"You don't have enough balance to stake this amount!\""
                                  },
                                  "value": "You don't have enough balance to stake this amount!"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5a8ce860ea43f0a1518d1bda407b43c02425fae7fcbe5429a73991348804de67",
                                    "typeString": "literal_string \"You don't have enough balance to stake this amount!\""
                                  }
                                ],
                                "id": 781,
                                "name": "createStakeFailed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 729,
                                "src": "1293:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1293:72:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 784,
                            "nodeType": "EmitStatement",
                            "src": "1288:77:5"
                          }
                        ]
                      }
                    },
                    "id": 811,
                    "nodeType": "IfStatement",
                    "src": "1121:389:5",
                    "trueBody": {
                      "id": 774,
                      "nodeType": "Block",
                      "src": "1150:88:5",
                      "statements": [
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "hexValue": "546f207374616b6520616761696e2c20706c6561736520776974686472617720796f7572206f6c64207374616b6521",
                                "id": 771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1181:49:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_556f11f1b03947dd4b94da9f2db20acf45ece55a783b236586e45f730da63b5b",
                                  "typeString": "literal_string \"To stake again, please withdraw your old stake!\""
                                },
                                "value": "To stake again, please withdraw your old stake!"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_556f11f1b03947dd4b94da9f2db20acf45ece55a783b236586e45f730da63b5b",
                                  "typeString": "literal_string \"To stake again, please withdraw your old stake!\""
                                }
                              ],
                              "id": 770,
                              "name": "createStakeFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "1163:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1163:68:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 773,
                          "nodeType": "EmitStatement",
                          "src": "1158:73:5"
                        }
                      ]
                    }
                  },
                  "id": 812,
                  "nodeType": "IfStatement",
                  "src": "1037:473:5",
                  "trueBody": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "1053:62:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "496e76616c6964207374616b6520616d6f756e7421",
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1084:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d1115c29fbea0f57b0a51c31d2f2fe33c79b7e7ef72d87d7cc57efc654343a4d",
                                "typeString": "literal_string \"Invalid stake amount!\""
                              },
                              "value": "Invalid stake amount!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d1115c29fbea0f57b0a51c31d2f2fe33c79b7e7ef72d87d7cc57efc654343a4d",
                                "typeString": "literal_string \"Invalid stake amount!\""
                              }
                            ],
                            "id": 759,
                            "name": "createStakeFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "1066:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1066:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 762,
                        "nodeType": "EmitStatement",
                        "src": "1061:47:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "856:128:5",
              "text": " @notice A method for the stakeholder to create a stake.\n @param _stake The amount of the stake to be created."
            },
            "functionSelector": "1bf6ddae",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "1008:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1007:16:5"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:5"
            },
            "scope": 906,
            "src": "987:528:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "1652:581:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 818,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "1662:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 821,
                      "indexExpression": {
                        "expression": {
                          "id": 819,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1669:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1669:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1662:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1684:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1662:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "1773:456:5",
                    "statements": [
                      {
                        "assignments": [
                          830
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 830,
                            "mutability": "mutable",
                            "name": "totalDays",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "1781:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 829,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1781:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 846,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 831,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "1802:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1802:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 833,
                                    "name": "startDate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 720,
                                    "src": "1820:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 836,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 834,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1830:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 835,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1830:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1820:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1802:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 838,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1801:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "id": 843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "id": 841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3630",
                                    "id": 839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1846:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3630",
                                    "id": 840,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1851:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "src": "1846:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3234",
                                  "id": 842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1856:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "src": "1846:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              }
                            ],
                            "id": 844,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1845:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            }
                          },
                          "src": "1801:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1781:78:5"
                      },
                      {
                        "assignments": [
                          848
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 848,
                            "mutability": "mutable",
                            "name": "noOfCycles",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "1867:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 847,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1867:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 852,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 849,
                            "name": "totalDays",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "1888:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "37",
                            "id": 850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1900:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "src": "1888:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1867:34:5"
                      },
                      {
                        "assignments": [
                          854
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 854,
                            "mutability": "mutable",
                            "name": "interestOfOneCycle",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "1909:26:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 853,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1909:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 864,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 855,
                                    "name": "stakes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 716,
                                    "src": "1939:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 858,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 856,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1946:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1946:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1939:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "35",
                                  "id": 859,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1960:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "src": "1939:22:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 861,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1938:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1965:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1938:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1909:59:5"
                      },
                      {
                        "assignments": [
                          866
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 866,
                            "mutability": "mutable",
                            "name": "interestAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "1976:22:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 865,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1976:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 870,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 867,
                            "name": "noOfCycles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 848,
                            "src": "2001:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 868,
                            "name": "interestOfOneCycle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "2014:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2001:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1976:56:5"
                      },
                      {
                        "assignments": [
                          872
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 872,
                            "mutability": "mutable",
                            "name": "withdrawableAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "2040:26:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 871,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2040:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 879,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 873,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "2069:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 876,
                            "indexExpression": {
                              "expression": {
                                "id": 874,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2076:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2076:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2069:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 877,
                            "name": "interestAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "2090:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2069:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2040:64:5"
                      },
                      {
                        "expression": {
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 880,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "2112:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 883,
                            "indexExpression": {
                              "expression": {
                                "id": 881,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2119:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2119:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2112:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2133:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2112:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 886,
                        "nodeType": "ExpressionStatement",
                        "src": "2112:22:5"
                      },
                      {
                        "expression": {
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 887,
                              "name": "startDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "2142:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 890,
                            "indexExpression": {
                              "expression": {
                                "id": 888,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2152:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2152:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2142:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2166:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2142:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 893,
                        "nodeType": "ExpressionStatement",
                        "src": "2142:25:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 895,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2181:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2181:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 897,
                                "name": "withdrawableAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 872,
                                "src": "2193:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 898,
                                "name": "decimal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "2214:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2193:28:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 894,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "2175:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2175:47:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "2175:47:5"
                      }
                    ]
                  },
                  "id": 903,
                  "nodeType": "IfStatement",
                  "src": "1658:571:5",
                  "trueBody": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "1687:80:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "596f7520646f6e2774206861766520616e79207374616b6520746f20776974686472617721",
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1720:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6621264d3f1cba6f86600d1ad6742704e44897086dac48630df9fb171a9a419c",
                                "typeString": "literal_string \"You don't have any stake to withdraw!\""
                              },
                              "value": "You don't have any stake to withdraw!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6621264d3f1cba6f86600d1ad6742704e44897086dac48630df9fb171a9a419c",
                                "typeString": "literal_string \"You don't have any stake to withdraw!\""
                              }
                            ],
                            "id": 824,
                            "name": "withdrawStakeFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "1700:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1700:60:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 827,
                        "nodeType": "EmitStatement",
                        "src": "1695:65:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 815,
              "nodeType": "StructuredDocumentation",
              "src": "1519:98:5",
              "text": " @notice A method to allow a stakeholder to withdraw his stake with interest if any."
            },
            "functionSelector": "bed9d861",
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1642:2:5"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:0:5"
            },
            "scope": 906,
            "src": "1620:613:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 907,
        "src": "259:1976:5"
      }
    ],
    "src": "32:2204:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xAA7832125978654DEcF16f7C9B8df6A24C62E9d1",
      "transactionHash": "0x4d5ceff194a47e6039a0adc37acf5f44d230f2dea4f61f0dc7b6e723aea1b59c"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-08T10:43:40.649Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Chakshu Jain, India",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createStake(uint256)": {
        "params": {
          "_stake": "The amount of the stake to be created."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "title": "Staking Token (STK)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "The constructor for the Staking Token."
      },
      "createStake(uint256)": {
        "notice": "A method for the stakeholder to create a stake."
      },
      "withdrawStake()": {
        "notice": "A method to allow a stakeholder to withdraw his stake with interest if any."
      }
    },
    "notice": "Implements a basic ERC20 staking token with reward distribution.",
    "version": 1
  }
}